// Copyright 2021 Adrian Vargas Martinez. University of Costa Rica.

#include "HTTPConnectionHandler.hpp"
#include <vector>

HTTPConnectionHandler::HTTPConnectionHandler(
    std::vector<HTTPApplication*> *apps) : Consumer() {
        this->appsFromHTTPServer = apps;
}

HTTPConnectionHandler::HTTPConnectionHandler(
    const HTTPConnectionHandler& httpConnectionHandler): Consumer() {
    this->appsFromHTTPServer = httpConnectionHandler.appsFromHTTPServer;
}

HTTPConnectionHandler::~HTTPConnectionHandler() {
}

void HTTPConnectionHandler::consume(Socket client) {
    HTTPRequest httpRequest;
    HTTPResponse httpResponse;
    bool appFound = false;
    bool emptyRequest = httpRequest.load(client, httpRequest);

    // This review is important because some browsers sometimes
    // send empty requests
    if (!emptyRequest) {
        // The vector is traversed looking if the request belongs
        // to any of the vector's apps. It is mandatory to indicate
        // in the URI for which application the request is directed.
        // If the app is not found, the user is told that the app was
        // not found with an APP NOT FOUND 404.
        for ( std::vector<HTTPApplication*>::iterator
            it = appsFromHTTPServer->begin();
            it != appsFromHTTPServer->end() && !appFound ; it++ ) {
                HTTPApplication *app = *it;
                appFound = app->isMyPackege(client, httpRequest, httpResponse);
        }
        // Response 404 in case the app hasn't been found
        if (!appFound) {
            this->responseBadRequest(client, httpResponse);
        }

        httpResponse.send(client);
    }
}

int HTTPConnectionHandler::run() {
    this->consumeForever();
    return 0;
}

void HTTPConnectionHandler::responseBadRequest(Socket &client,
                                               HTTPResponse &httpResponse) {
    const char* const SERVER_NAME = "AVM";
    std::ostringstream message;
    message << "<!DOCTYPE html><html lang=\"en\"><meta charset=\"ascii\"/>";
    message << "<title> APP NOT FOUND!</title>";
    message << "<h1> APP NOT FOUND " <<
    httpResponse.STATUS_NOT_FOUND_404 << "!</h1>";
    message << "<hr><p>Generated by " << SERVER_NAME << " server </p></html>";

    // Status line
    client << "HTTP/1.0 " << httpResponse.STATUS_NOT_FOUND_404 <<
              " NOT FOUND\r\n";

    // Response header
    client << "Server: " << SERVER_NAME << "\r\n";
    client << "Content-Type: text/html; charset=ascii\r\n";
    client << "Content-Length: " << message.str().length() << "\r\n";
    client << "\r\n";

    client << message.str();
}
